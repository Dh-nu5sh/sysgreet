name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
      - name: Check formatting
        run: |
          if [ -n "$(gofmt -l $(git ls-files '*.go'))" ]; then
            echo "Go files are not formatted. Run 'make fmt'"
            gofmt -l $(git ls-files '*.go')
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run tests
        env:
          CGO_ENABLED: 0
        run: go test -v -coverprofile=coverage.out ./...
      - name: Check coverage
        run: go tool cover -func=coverage.out

  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run benchmarks
        env:
          CGO_ENABLED: 0
        run: |
          go test -bench=Startup -benchtime=20x ./test/benchmarks | tee bench.txt
          # Extract nanoseconds per operation and validate < 80ms (80000000 ns)
          NSOP=$(grep BenchmarkStartup bench.txt | awk '{print $3}')
          if [ -n "$NSOP" ]; then
            echo "Startup time: $NSOP ns/op"
            # Convert to integer for comparison (remove decimals if any)
            NSOP_INT=$(echo $NSOP | cut -d. -f1)
            if [ "$NSOP_INT" -gt 80000000 ]; then
              echo "FAIL: Startup time $NSOP_INT ns exceeds 80ms limit"
              exit 1
            fi
            echo "PASS: Startup time within 80ms p95 limit"
          else
            echo "WARNING: Could not extract benchmark result"
          fi

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build binary
        env:
          CGO_ENABLED: 0
        run: |
          go build -o sysgreet ./cmd/sysgreet
          ./sysgreet --disable
          ls -lh sysgreet
